---
export interface Props {
  titleTop: string;
  titleAccent: string;
  subtitleHtml: string;
  buttons: { label: string; href: string; variant?: 'primary' | 'secondary' | 'outline' }[];
}

const { titleTop, titleAccent, subtitleHtml, buttons } = Astro.props;
---

<section class="bg-[var(--background-light)] dark:bg-[var(--background-dark)] pt-20 pb-28 transition-all duration-200 ease-in-out">
  <div class="max-w-7xl mx-auto px-6 sm:px-8 lg:px-12 text-center">
    <h1 class="text-4xl sm:text-5xl md:text-6xl lg:text-7xl font-display font-bold text-[var(--text-primary-light)] dark:text-[var(--text-primary-dark)] leading-tight">
      {titleTop} <br />
      <span class="text-[var(--primary)]">{titleAccent}</span>
    </h1>

    <p class="mt-6 max-w-3xl mx-auto text-lg sm:text-xl text-[var(--text-secondary-light)] dark:text-[var(--text-secondary-dark)] leading-relaxed font-sans">
      <Fragment set:html={subtitleHtml} />
    </p>

    <div class="mt-10 flex flex-wrap justify-center gap-4">
      {buttons.map(btn => (
        <a
          href={btn.href}
          class={`btn ${
            btn.variant === 'secondary'
              ? 'btn-secondary'
              : btn.variant === 'outline'
              ? 'text-[var(--text-secondary-light)] dark:text-[var(--text-secondary-dark)] bg-gray-100 dark:bg-[var(--header-dark)] hover:bg-gray-200 dark:hover:bg-[var(--border-dark)]'
              : 'btn-primary'
          } transform hover:scale-105`}
        >
          {btn.label}
        </a>
      ))}
    </div>
  </div>
</section>
